{"version":3,"sources":["components/Header.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Header","class","useStyles","makeStyles","table","minWidth","backgroundColor","grey","cell","paddingLeft","BasicTable","classes","useState","allPeople","companyData","items","setItems","useEffect","axios","get","then","response","console","log","data","users","catch","err","companies","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","map","company","TableBody","rowSpan","length","name","phoneNumber","user","id","Avatar","alt","src","avatar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAUeA,MARf,WACI,OACI,wBAAQC,MAAM,SAAd,SACI,kE,iHCCNC,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,IACVC,gBAAiBC,KAEnBC,KAAM,CACJC,YAAa,UAIF,SAASC,IAEtB,IAAMC,EAAUT,IAFmB,EAKTU,mBAAS,CACjCC,UAAW,GACXC,YAAa,KAPoB,mBAK5BC,EAL4B,KAKrBC,EALqB,KAWnCC,qBAAU,WACRC,IAAMC,IAAI,yDACPC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAU,qBACtBL,EAAS,2BAAKD,GAAN,IAAaF,UAAWQ,EAASG,KAAK,GAAGC,MAAOX,YAAaO,EAASG,WAE/EE,OAAM,SAACC,GACNL,QAAQC,IAAII,QAEf,IAGH,IAAIC,EAAYb,EAAMD,YAItB,OAHAQ,QAAQC,IAAIK,EAAW,wCAIrB,8BACE,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SAEE,eAACC,EAAA,EAAD,CAAOC,UAAWtB,EAAQP,MAA1B,UACE,cAAC8B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,0BAGA,cAACA,EAAA,EAAD,CAAWH,UAAWtB,EAAQH,KAA9B,2BAGA,cAAC4B,EAAA,EAAD,8BAGA,cAACA,EAAA,EAAD,2CAOPR,EAAUS,KAAI,SAAAC,GAAO,OACpB,cAACC,EAAA,EAAD,UACE,cAACJ,EAAA,EAAD,UACE,eAACA,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAWI,QAASF,EAAQb,MAAMgB,OAAS,EAA3C,UACGH,EAAQI,KAAK,uBACbJ,EAAQK,eAEVL,EAAQb,MAAMY,KAAI,SAAAO,GAAI,OACrB,eAACT,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACGQ,EAAKF,OAER,cAACN,EAAA,EAAD,UACGQ,EAAKC,KAER,cAACT,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,CAAQC,IAAKH,EAAKF,KAAMM,IAAKJ,EAAKK,kCCxE3CC,MATf,WACE,OACE,sBAAKjB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0cad3c1c.chunk.js","sourcesContent":["import \"./Header.css\";\n\nfunction Header() {\n    return (\n        <header class=\"header\">\n            <h1> Companies and Employee Data </h1>\n        </header>\n    );\n}\n\nexport default Header;","import React, { useEffect, useState, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Avatar, Container, Grid, TableRowColumn } from '@material-ui/core';\nimport axios from \"axios\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 1000,\n    backgroundColor: grey,\n  },\n  cell: {\n    paddingLeft: \"80px\",\n  }\n});\n\nexport default function BasicTable() {\n\n  const classes = useStyles();\n\n\n  const [items, setItems] = useState({\n    allPeople: [],\n    companyData: [],\n  });\n\n\n  useEffect(function () {\n    axios.get(\"https://6065d7a7b8fbbd001756786c.mockapi.io/companies\")\n      .then((response) => {\n        console.log(response, \"Response from api\");\n        setItems({ ...items, allPeople: response.data[0].users, companyData: response.data });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n\n  var companies = items.companyData;\n  console.log(companies, \"should be company data in array form\");\n\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        {/* Table container with comparments */}\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                <TableRow>\n                  <TableCell>\n                    Company&nbsp;\n                  </TableCell>\n                  <TableCell className={classes.cell}>\n                    Employees&nbsp;\n                  </TableCell>\n                  <TableCell>\n                    Employee Id&nbsp;\n                  </TableCell>\n                  <TableCell>\n                    Employee Avatar&nbsp;\n                  </TableCell>\n                </TableRow>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {companies.map(company => (\n            <TableBody>\n              <TableRow>\n                <TableRow>\n                  <TableCell rowSpan={company.users.length + 1}>\n                    {company.name}<br />\n                    {company.phoneNumber}\n                  </TableCell>\n                  {company.users.map(user => (\n                    <TableRow>\n                      <TableCell >\n                        {user.name}\n                      </TableCell>\n                      <TableCell >\n                        {user.id}\n                      </TableCell>\n                      <TableCell>\n                        <Avatar alt={user.name} src={user.avatar} />\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableRow>\n              </TableRow>\n            </TableBody>\n          ))}\n        </Table>\n      </TableContainer>\n    </div >\n  );\n}","import './App.css';\nimport Header from './components/Header'\nimport Table from './components/Table'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}